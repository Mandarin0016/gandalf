[
  {
    "question": "Каква е разликата между `==` оператора и `.equals()` метода при сравнение на два обекта от тип String в Java?",
    "options": {
      "a": "`==` операторът сравнява референциите на обектите, докато `.equals()` методът сравнява техните стойности.",
      "b": "`==` операторът сравнява стойностите на обектите, докато `.equals()` методът сравнява референциите им.",
      "c": "`==` операторът и `.equals()` методът извършват еднакво сравнение на обектите.",
      "d": "`.equals()` методът е недефиниран за обекти от тип String."
    },
    "correct_answer": "a",
    "difficulty": "hard",
    "topics": [
      "String",
      "Оператори за сравнение"
    ]
  },
  {
    "question": "Какво е условна конструкция (if-else) и за какво се използва в Java?",
    "options": {
      "a": "Условната конструкция (if-else) позволява изпълнението на блок код само ако определено условие е изпълнено. Тя се използва за взимане на решения и разклонение в програмата.",
      "b": "Условната конструкция (if-else) се използва за дефиниране на цикли и повторения в програмата.",
      "c": "Условната конструкция (if-else) се използва за извеждане на данни на конзолата.",
      "d": "Условната конструкция (if-else) се използва за деклариране на променливи и константи."
    },
    "correct_answer": "a",
    "difficulty": "hard",
    "topics": [
      "Условни конструкции"
    ]
  },
  {
    "question": "Какви са основните логически оператори в Java и как се използват?",
    "options": {
      "a": "Основните логически оператори в Java са `&&` (логическо И), `||` (логическо ИЛИ) и `!` (логическо НЕ). Те се използват за комбиниране на логически условия.",
      "b": "Основните логически оператори в Java са `+` (събиране), `-` (изваждане) и `*` (умножение). Те се използват за извършване на математически операции.",
      "c": "Основните логически оператори в Java са `=` (присвояване), `==` (равенство) и `!=` (неравенство). Те се използват за работа с променливи и стойности.",
      "d": "Основните логически оператори в Java са `>` (по-голямо), `<` (по-малко) и `>=` (по-голямо или равно). Те се използват за сравнение на числени стойности."
    },
    "correct_answer": "a",
    "difficulty": "medium",
    "topics": [
      "Логически оператори"
    ]
  },
  {
    "question": "Как се използва операторът `switch` в Java и кога е по-подходящ от условната конструкция `if-else`?",
    "options": {
      "a": "Операторът `switch` в Java се използва за проверка на една променлива и изпълнение на различен код в зависимост от нейната стойност. Той е по-подходящ от `if-else`, когато имаме няколко възможни стойности за проверка.",
      "b": "Операторът `switch` в Java се използва за деклариране на нови променливи и константи. Той е по-подходящ от `if-else`, когато искаме да изпълним определен код само веднъж.",
      "c": "Операторът `switch` в Java се използва за извеждане на данни на конзолата. Той е по-подходящ от `if-else`, когато искаме да променяме стойностите на променливи в програмата.",
      "d": "Операторът `switch` в Java се използва за комбиниране на логически условия. Той е по-подходящ от `if-else`, когато искаме да изпълним различен код в зависимост от няколко условия."
    },
    "correct_answer": "a",
    "difficulty": "hard",
    "topics": [
      "Switch-конструкция"
    ]
  },
  {
    "question": "Какво е форматиране на изхода (formatted output) в Java и как се постига?",
    "options": {
      "a": "Форматирането на изхода (formatted output) в Java позволява контролираното извеждане на данни на конзолата или във файл в желания формат. То се постига чрез използването на специални символи и маркери в низовете за форматиране.",
      "b": "Форматирането на изхода (formatted output) в Java се отнася до използването на цветове и шрифтове при извеждане на данни на конзолата или във файл. То се постига чрез спецификация на желаните цветове и шрифтове в програмния код.",
      "c": "Форматирането на изхода (formatted output) в Java означава добавянето на отстъпи, интервали и нови редове при извеждане на данни на конзолата или във файл. То се постига чрез добавяне на специални символи и последователности в низовете.",
      "d": "Форматирането на изхода (formatted output) в Java се отнася до промяна на размера и положението на изведените данни на конзолата или във файл. То се постига чрез използването на специални класове и методи за манипулация на изображения."
    },
    "correct_answer": "a",
    "difficulty": "medium",
    "topics": [
      "Изход и вход на данни"
    ]
  },
  {
    "question": "Какво представлява рекурсията (recursion) в програмирането и кога е полезна?",
    "options": {
      "a": "Рекурсията (recursion) представлява използването на функция, която се извиква сама в себе си. Тя е полезна, когато проблемът може да се разбие на подпроблеми със сходна структура и може да се решава по индукция.",
      "b": "Рекурсията (recursion) представлява използването на цикъл, който се изпълнява повторно в програмата. Тя е полезна, когато имаме нужда от повторение на определен блок код за известен брой пъти.",
      "c": "Рекурсията (recursion) представлява използването на глобални променливи и константи в програмата. Тя е полезна, когато искаме да имаме достъп до тези данни от всяка част на програмата.",
      "d": "Рекурсията (recursion) представлява използването на вложени класове в Java. Тя е полезна, когато искаме да групираме свързани по функционалност класове в едно цяло."
    },
    "correct_answer": "a",
    "difficulty": "hard",
    "topics": [
      "Рекурсия"
    ]
  },
  {
    "question": "Какво представляват контролните променливи (control variables) в цикъла for и за какво се използват?",
    "options": {
      "a": "Контролните променливи (control variables) в цикъла for са променливи, които се използват за контролиране на брояча и условието за повторение на цикъла. Те се използват за задаване на начална стойност, проверка на условието за повторение и промяна на стойността на брояча.",
      "b": "Контролните променливи (control variables) в цикъла for са променливи, които се използват за запазване на резултата от изпълнението на цикъла. Те се използват за прехвърляне на стойността на променливата след завършване на цикъла.",
      "c": "Контролните променливи (control variables) в цикъла for са променливи, които се използват за задаване на условието за изпълнение на цикъла. Те се използват за проверка на логическото условие и приключване на цикъла при достигане на определената стойност.",
      "d": "Контролните променливи (control variables) в цикъла for са променливи, които се използват за пренасочване на изпълнението на програмата. Те се използват за избягване на определени блокове код и преход към други части от програмата."
    },
    "correct_answer": "a",
    "difficulty": "medium",
    "topics": [
      "For-цикъл"
    ]
  },
  {
    "question": "Какво представлява условната конструкция (if-else) в Java и кога се използва?",
    "options": {
      "a": "Условната конструкция (if-else) в Java се използва за проверка на условие и изпълнение на определен блок код, ако условието е истина. Ако условието не е изпълнено, се изпълнява блок код от else частта. Тя се използва, когато искаме да вземем решение в зависимост от определено условие.",
      "b": "Условната конструкция (if-else) в Java се използва за изпълнение на блок код няколко пъти в зависимост от броя на повторенията. Тя се използва, когато имаме нужда от повторение на определен блок код за известен брой пъти.",
      "c": "Условната конструкция (if-else) в Java се използва за изпълнение на блок код, който се повтаря до достигане на определено условие. Тя се използва, когато искаме да изпълним блок код няколко пъти и да проверим условие за прекратяване на повторенията.",
      "d": "Условната конструкция (if-else) в Java се използва за създаване на нови условни оператори. Тя се използва, когато искаме да създадем персонализиран условен оператор, който да отговаря на специфични изисквания."
    },
    "correct_answer": "a",
    "difficulty": "hard",
    "topics": [
      "Условни конструкции (if, if-else)"
    ]
  },
  {
    "question": "Какво представлява условната конструкция (if-else) в Java и кога се използва?",
    "options": {
      "a": "Условната конструкция (if-else) в Java се използва за проверка на условие и изпълнение на определен блок код, ако условието е истина. Ако условието не е изпълнено, се изпълнява блок код от `else` частта. Тя се използва, когато искаме да вземем решение в зависимост от определено условие.",
      "b": "Условната конструкция (if-else) в Java се използва за изпълнение на блок код няколко пъти в зависимост от броя на повторенията. Тя се използва, когато имаме нужда от повторение на определен блок код за известен брой пъти.",
      "c": "Условната конструкция (if-else) в Java се използва за изпълнение на блок код, който се повтаря до достигане на определено условие. Тя се използва, когато искаме да изпълним блок код няколко пъти и да проверим условие за прекратяване на повторенията.",
      "d": "Условната конструкция (if-else) в Java се използва за създаване на нови условни оператори. Тя се използва, когато искаме да създадем персонализиран условен оператор, който да отговаря на специфични изисквания."
    },
    "correct_answer": "a",
    "difficulty": "трудно",
    "topics": [
      "Условни конструкции (if, if-else)"
    ]
  },
  {
    "question": "Какво представляват вложените условни конструкции и как се използват в Java?",
    "options": {
      "a": "Вложените условни конструкции в Java са вложени `if-else` блокове, които се използват за създаване на по-сложни условия с множество проверки. Те се използват, когато искаме да изпълним различен код в зависимост от комбинацията от условия.",
      "b": "Вложените условни конструкции в Java са блокове код, които се използват за повторно изпълнение на определен блок код. Те се използват, когато искаме да изпълним същия блок код няколко пъти.",
      "c": "Вложените условни конструкции в Java са вложени цикли, които се използват за извършване на повторения вътре в други повторения. Те се използват, когато искаме да извършим сложни многократни повторения на код.",
      "d": "Вложените условни конструкции в Java са специални оператори, които се използват за прекратяване на изпълнението на цикъл или условие. Те се използват, когато искаме да прекратим изпълнението на цикъл или да излезем от условие."
    },
    "correct_answer": "a",
    "difficulty": "трудно",
    "topics": [
      "Вложени условни конструкции"
    ]
  },
  {
    "question": "Какво е условието за изпълнение на код в if-конструкцията?",
    "options": {
      "a": "Изпълнява се кодът, ако условието е истина (true).",
      "b": "Изпълнява се кодът, ако условието е лъжа (false).",
      "c": "Изпълнява се кодът, ако условието е равно на 0.",
      "d": "Изпълнява се кодът, ако условието е по-голямо от 0."
    },
    "correct_answer": "a",
    "difficulty": "трудно",
    "topics": [
      "Условни конструкции"
    ]
  },
  {
    "question": "Кой от следните оператори се използва за проверка на равенство на две стойности в Java?",
    "options": {
      "a": "==",
      "b": "!=",
      "c": "<=",
      "d": ">"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "Оператори за сравнение"
    ]
  },
  {
    "question": "Какво представляват вложените условни конструкции и как се използват в Java?",
    "options": {
      "a": "Вложените условни конструкции в Java са вложени `if-else` блокове, които се използват за създаване на по-сложни условия с множество проверки. Те се използват, когато искаме да изпълним различен код в зависимост от комбинацията от условия.",
      "b": "Вложените условни конструкции в Java са блокове код, които се използват за повторно изпълнение на определен блок код. Те се използват, когато искаме да изпълним същия блок код няколко пъти.",
      "c": "Вложените условни конструкции в Java са вложени цикли, които се използват за извършване на повторения вътре в други повторения. Те се използват, когато искаме да извършим сложни многократни повторения на код.",
      "d": "Вложените условни конструкции в Java са специални оператори, които се използват за обработка на грешки и изключения. Те се използват, когато искаме да се справим със специфични ситуации и да изпълним алтернативен код при грешки."
    },
    "correct_answer": "a",
    "difficulty": "трудно",
    "topics": [
      "Условни конструкции"
    ]
  },
  {
    "question": "Какъв е синтаксисът за деклариране на променлива в Java?",
    "options": {
      "a": "var myVariable = value;",
      "b": "let myVariable = value;",
      "c": "int myVariable = value;",
      "d": "myVariable = value;"
    },
    "correct_answer": "c",
    "difficulty": "лесно",
    "topics": [
      "Деклариране на променливи"
    ]
  },
  {
    "question": "Какъв е резултатът от следната операция в Java: 5 + 3 * 2?",
    "options": {
      "a": "11",
      "b": "16",
      "c": "19",
      "d": "26"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "Оператори и изрази"
    ]
  },
  {
    "question": "Какво представлява цикълът for в Java и как се използва?",
    "options": {
      "a": "Цикълът for в Java е цикъл, който се използва за изпълнение на определен блок код няколко пъти. Той изисква инициализация на променлива, условие за изпълнение и стъпка за промяна на променливата.",
      "b": "Цикълът for в Java е цикъл, който се използва за повторение на определен блок код, докато условието е вярно. Той изисква само условие за изпълнение.",
      "c": "Цикълът for в Java е цикъл, който се използва за изпълнение на определен блок код, като изпълнението се повтаря, докато условието стане лъжа (false). Той изисква инициализация на променлива и стъпка за промяна на променливата.",
      "d": "Цикълът for в Java е цикъл, който се използва за обхождане на елементите в колекция или масив. Той изисква итератор или индекс за обхождане на елементите."
    },
    "correct_answer": "a",
    "difficulty": "трудно",
    "topics": [
      "For-цикъл"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\n\nint i = 0;\nwhile (i < 5) {\n  System.out.println(i);\n  i++;\n}",
    "options": {
      "a": "0",
      "b": "0 1",
      "c": "0 1 2",
      "d": "0 1 2 3 4"
    },
    "correct_answer": "d",
    "difficulty": "средно",
    "topics": [
      "While-цикъл"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\n\nint x = 10;\ndo {\n  System.out.println(x);\n  x--;\n} while (x > 5);",
    "options": {
      "a": "10",
      "b": "10 9",
      "c": "10 9 8",
      "d": "10 9 8 7 6 5"
    },
    "correct_answer": "c",
    "difficulty": "лесно",
    "topics": [
      "Do-while-цикъл"
    ]
  },
  {
    "question": "Какъв е резултатът от следния код в Java?\n\nint number = 7;\nswitch (number) {\n  case 1:\n    System.out.println(\"Един\");\n    break;\n  case 3:\n    System.out.println(\"Три\");\n    break;\n  case 5:\n    System.out.println(\"Пет\");\n    break;\n  default:\n    System.out.println(\"Друго число\");\n}",
    "options": {
      "a": "Един",
      "b": "Три",
      "c": "Пет",
      "d": "Друго число"
    },
    "correct_answer": "d",
    "difficulty": "лесно",
    "topics": [
      "Switch-конструкция"
    ]
  },
  {
    "question": "Какво представлява функцията Math.floor() в Java и как се използва?",
    "options": {
      "a": "Math.floor() е функция в Java, която връща най-големия цял числен резултат, който е по-малък или равен на даденото число. Тя се използва за закръгляне на числата надолу.",
      "b": "Math.floor() е функция в Java, която връща най-големия цял числен резултат, който е по-голям или равен на даденото число. Тя се използва за закръгляне на числата нагоре.",
      "c": "Math.floor() е функция в Java, която връща най-близкото цяло число към даденото число. Тя се използва за закръгляне на числата към най-близкото цяло число.",
      "d": "Math.floor() е функция в Java, която връща най-малкото цяло число, което е по-голямо или равно на даденото число. Тя се използва за закръгляне на числата нагоре."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "Math.floor"
    ]
  },
  {
    "question": "Какво представлява функцията Math.abs() в Java и как се използва?",
    "options": {
      "a": "Math.abs() е функция в Java, която връща абсолютната стойност на дадено число. Тя се използва за вземане на модул от числото.",
      "b": "Math.abs() е функция в Java, която връща положителното число, което е по-малко или равно на даденото число. Тя се използва за вземане на окръглено число надолу.",
      "c": "Math.abs() е функция в Java, която връща най-големия цял числен резултат, който е по-малък или равен на даденото число. Тя се използва за закръгляне на числата нагоре.",
      "d": "Math.abs() е функция в Java, която връща най-близкото цяло число към даденото число. Тя се използва за закръгляне на числата към най-близкото цяло число."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "Math.abs"
    ]
  },
  {
    "question": "Как се използва функцията Math.pow() в Java?",
    "options": {
      "a": "Math.pow() се използва за намиране на степен на дадено число. Първият аргумент на функцията е числото, което ще бъде повдигнато на степен, а вторият аргумент е степента, на която ще се повдигне числото.",
      "b": "Math.pow() се използва за намиране на квадратен корен от дадено число. Първият аргумент на функцията е числото, от което ще се извлича корен, а вторият аргумент е степента на корена.",
      "c": "Math.pow() се използва за намиране на модул от дадено число. Първият аргумент на функцията е числото, от което ще се вземе модул, а вторият аргумент е модула.",
      "d": "Math.pow() се използва за намиране на най-голямо цяло число, което е по-малко или равно на дадено число. Първият аргумент на функцията е числото, за което се търси най-голямото цяло число."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "Math.pow"
    ]
  },
  {
    "question": "Каква е стойността на Math.PI в Java и как се използва?",
    "options": {
      "a": "Math.PI представлява константата за числото Пи (π) в Java и има стойност 3.141592653589793. Тя се използва за извършване на математически операции, свързани с кръгови функции.",
      "b": "Math.PI представлява константата за числото Пи (π) в Java и има стойност 3.14. Тя се използва за извършване на математически операции, свързани с кръгови функции.",
      "c": "Math.PI представлява константата за числото Пи (π) в Java и има стойност 3.1415. Тя се използва за извършване на математически операции, свързани с кръгови функции.",
      "d": "Math.PI представлява константата за числото Пи (π) в Java и има стойност 3.141592. Тя се използва за извършване на математически операции, свързани с кръгови функции."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "Math.PI"
    ]
  },
  {
    "question": "Какво представлява операторът return в Java и как се използва?",
    "options": {
      "a": "Операторът return се използва за връщане на стойност от метод в Java. Той прекратява изпълнението на метода и връща стойността, която е указана в return израза.",
      "b": "Операторът return се използва за извеждане на текст на конзолата в Java. Той позволява преминаване на нов ред и отпечатване на резултати от изпълнението на програмата.",
      "c": "Операторът return се използва за прекратяване на изпълнението на цикъл в Java. Той преминава към следващата итерация на цикъла или излиза от него, в зависимост от условието на return израза.",
      "d": "Операторът return се използва за дефиниране на променливи в Java. Той задава стойност на променлива и я прави достъпна за използване в други части на програмата."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "return"
    ]
  },
  {
    "question": "Как се използва класът Scanner в Java и за какво се използва?",
    "options": {
      "a": "Класът Scanner в Java се използва за четене на входни данни от поток. Той предоставя методи за четене на различни типове данни като цели числа, числа с плаваща запетая, символи и др.",
      "b": "Класът Scanner в Java се използва за генериране на случайни числа. Той предоставя методи за генериране на случайни числа в определен диапазон или с определени свойства.",
      "c": "Класът Scanner в Java се използва за извеждане на текст на конзолата. Той предоставя методи за печатане на текст и форматиран изход.",
      "d": "Класът Scanner в Java се използва за манипулиране на низови данни. Той предоставя методи за обработка на низови данни като конкатенация, сравнение, търсене и заместване на символи."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "Scanner"
    ]
  },
  {
    "question": "Как се използва методът println() в Java и какво е неговото предназначение?",
    "options": {
      "a": "Методът println() в Java се използва за извеждане на текст на конзолата. Той печата на един ред и автоматично преминава на нов ред след печатането.",
      "b": "Методът println() в Java се използва за печатане на числови стойности на конзолата. Той преобразува числата в текстов формат и ги извежда на един ред.",
      "c": "Методът println() в Java се използва за четене на входни данни от поток. Той чете въведените данни от потребителя и ги използва в програмата.",
      "d": "Методът println() в Java се използва за прекратяване на изпълнението на метод. Той спира изпълнението на метода и преминава към следващия метод."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "println"
    ]
  },
  {
    "question": "Как се използва методът printf() в Java и за какво се използва?",
    "options": {
      "a": "Методът printf() в Java се използва за форматирано печатане на текст на конзолата. Той позволява специфициране на форматиране на данни, като подмяна на стойности в текстов шаблон.",
      "b": "Методът printf() в Java се използва за печатане на текстови файлове. Той прочита текстов файл и го извежда на конзолата или в друг файл.",
      "c": "Методът printf() в Java се използва за сравнение на числови стойности. Той сравнява две числови стойности и връща резултата от сравнението като булева стойност.",
      "d": "Методът printf() в Java се използва за генериране на случайни числа. Той генерира случайно число и го връща като резултат."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "printf"
    ]
  },
  {
    "question": "Какво представлява комбинацията %n или \n в Java и как се използва?",
    "options": {
      "a": "Комбинацията %n или \n в Java представлява специален символ за нов ред. Тя се използва за преминаване на нов ред при печатане на текст на конзолата.",
      "b": "Комбинацията %n или \n в Java представлява оператор за поставяне на интервал в текстови низ. Тя се използва за вмъкване на интервал между думите в низа.",
      "c": "Комбинацията %n или \n в Java представлява символ за ескейпване на специални символи. Тя се използва за вмъкване на специални символи като кавички или обратни наклонени черти в текстови низове.",
      "d": "Комбинацията %n или \n в Java представлява символ за отмяна на последователност от символи. Тя се използва за премахване на последователност от символи от текстови низ."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "%n",
      "\n"
    ]
  },
  {
    "question": "Какво представлява операторът return в Java и как се използва?",
    "options": {
      "a": "Операторът return в Java се използва за връщане на стойност от метод. Той прекратява изпълнението на метода и връща резултат към мястото, от което методът е бил извикан.",
      "b": "Операторът return в Java се използва за прекратяване на изпълнението на цикъл. Той спира изпълнението на цикъла и преминава към следващата итерация.",
      "c": "Операторът return в Java се използва за деклариране на променлива. Той създава нова променлива и задава й начална стойност.",
      "d": "Операторът return в Java се използва за извършване на математически операции. Той извършва операции като събиране, изваждане, умножение и деление."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "return"
    ]
  },
  {
    "question": "Какво представлява ключовата дума break в Java и как се използва?",
    "options": {
      "a": "Ключовата дума break в Java се използва за прекратяване на изпълнението на цикъл или switch-конструкция. Тя прекъсва текущата итерация на цикъла или изпълнението на switch-конструкцията и продължава със следващия код.",
      "b": "Ключовата дума break в Java се използва за деклариране на нов метод. Тя създава нов метод и задава му име и параметри.",
      "c": "Ключовата дума break в Java се използва за преминаване към следващия блок от код. Тя изпълнява кода в текущия блок и преминава към следващия.",
      "d": "Ключовата дума break в Java се използва за изчистване на променливи. Тя нулира стойностите на променливите и освобождава паметта, заета от тях."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "break"
    ]
  },
  {
    "question": "Какво представлява коментарът в Java и как се използва?",
    "options": {
      "a": "Коментарът в Java е част от кода, която се игнорира при компилацията. Той се използва за пояснение на кода и улесняване на разбирането му от други програмисти.",
      "b": "Коментарът в Java е израз, който се използва за извършване на математически операции. Той събира, изважда, умножава или дели числа.",
      "c": "Коментарът в Java е тип данни, който съхранява символни низове. Той се използва за създаване на текстови низове и манипулиране на техните стойности.",
      "d": "Коментарът в Java е оператор, който се използва за връщане на резултат от метод. Той прекратява изпълнението на метода и връща стойност."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "коментар"
    ]
  },
  {
    "question": "Как се използва класът Scanner в Java?",
    "options": {
      "a": "Класът Scanner в Java се използва за четене на входни данни от потока на конзолата. Той предоставя методи за четене на числа, текст и други типове данни.",
      "b": "Класът Scanner в Java се използва за извършване на математически операции. Той предоставя методи за събиране, изваждане, умножение и деление.",
      "c": "Класът Scanner в Java се използва за създаване на обекти от други класове. Той предоставя методи за създаване на нови обекти и извикване на техните методи.",
      "d": "Класът Scanner в Java се използва за работа с файлове и директории. Той предоставя методи за отваряне, четене, запис и затваряне на файлове и директории."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "Scanner"
    ]
  },
  {
    "question": "Как се използва методът println в Java?",
    "options": {
      "a": "Методът println в Java се използва за извеждане на текст на нов ред на конзолата. Той автоматично поставя символ за нов ред след извеждането на текста.",
      "b": "Методът println в Java се използва за извеждане на текст на конзолата. Той не поставя символ за нов ред и текстът се извежда на същия ред.",
      "c": "Методът println в Java се използва за изпълнение на математически операции. Той събира, изважда, умножава или дели числа.",
      "d": "Методът println в Java се използва за проверка на условие. Той връща булев резултат (true или false) в зависимост от резултата на условието."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "println"
    ]
  },
  {
    "question": "Как се използва методът printf в Java и какво представлява символът %n?",
    "options": {
      "a": "Методът printf в Java се използва за форматирано извеждане на текст на конзолата. Символът %n се използва за поставяне на нов ред след извеждането на текста.",
      "b": "Методът printf в Java се използва за изпълнение на математически операции. Символът %n представлява оператор за събиране на числа.",
      "c": "Методът printf в Java се използва за създаване на обекти от други класове. Символът %n се използва за създаване на нови обекти и извикване на техните методи.",
      "d": "Методът printf в Java се използва за проверка на условие. Символът %n представлява оператор за проверка на равенство между две стойности."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "printf",
      "%n"
    ]
  },
  {
    "question": "Какво представлява операторът break в Java?",
    "options": {
      "a": "Операторът break в Java се използва за прекъсване на изпълнението на цикъл или прекъсване на изпълнението на switch-конструкция. Той прекратява изпълнението на текущия блок и продължава с изпълнението на следващия блок.",
      "b": "Операторът break в Java се използва за извършване на математически операции. Той събира, изважда, умножава или дели числа.",
      "c": "Операторът break в Java се използва за проверка на условие. Той връща булев резултат (true или false) в зависимост от резултата на условието.",
      "d": "Операторът break в Java се използва за създаване на обекти от други класове. Той предоставя методи за създаване на нови обекти и извикване на техните методи."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "break"
    ]
  },
  {
    "question": "Какво представлява вложен цикъл в Java?",
    "options": {
      "a": "Вложен цикъл в Java е цикъл, който се намира вътре в друг цикъл. Той се използва за повторение на определен блок от код в рамките на друг блок от код.",
      "b": "Вложен цикъл в Java е оператор, който се използва за връщане на резултат от метод. Той прекратява изпълнението на метода и връща стойност.",
      "c": "Вложен цикъл в Java е клас, който се използва за създаване на обекти. Той предоставя методи за създаване на нови обекти и извикване на техните методи.",
      "d": "Вложен цикъл в Java е израз, който се използва за извършване на математически операции. Той събира, изважда, умножава или дели числа."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "вложени цикли"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\nint x = 5;\nint y = x++;\nSystem.out.println(y);",
    "options": {
      "a": "5",
      "b": "6",
      "c": "4",
      "d": "Error"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "оператори",
      "променливи"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\nint x = 10;\nint y = 3;\ndouble result = (double) x / y;\nSystem.out.println(result);",
    "options": {
      "a": "3.3333333333333335",
      "b": "3.0",
      "c": "3",
      "d": "Error"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "оператори",
      "променливи",
      "аритметика"
    ]
  },
  {
    "question": "Какво представлява операторът %n в Java?",
    "options": {
      "a": "Операторът %n в Java се използва за отпечатване на нов ред в конзолата.",
      "b": "Операторът %n в Java се използва за извършване на математическа операция на две числа.",
      "c": "Операторът %n в Java се използва за проверка на условие.",
      "d": "Операторът %n в Java се използва за създаване на обект от определен клас."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "оператори",
      "конзола",
      "форматиране"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\nint x = Math.max(5, 10);\nSystem.out.println(x);",
    "options": {
      "a": "5",
      "b": "10",
      "c": "15",
      "d": "Error"
    },
    "correct_answer": "b",
    "difficulty": "средно",
    "topics": [
      "Math",
      "функции",
      "оператори"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\nString name = \"John\"\nString message = String.format(\"Hello,%s!\", name);\nSystem.out.println(message);",
    "options": {
      "a": "Hello, John!",
      "b": "Hello, %s!",
      "c": "Hello, name!",
      "d": "Error"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "String",
      "форматиране",
      "конзола"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\ndouble x = Math.floor(3.7);\nSystem.out.println(x);",
    "options": {
      "a": "3.0",
      "b": "3.7",
      "c": "4.0",
      "d": "Error"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "Math",
      "функции",
      "аритметика"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\ndouble x = Math.abs(-5.8);\nSystem.out.println(x);",
    "options": {
      "a": "5.8",
      "b": "-5.8",
      "c": "5",
      "d": "Error"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "Math",
      "функции",
      "аритметика"
    ]
  },
  {
    "question": "Какво е стойността на Math.pow(2, 3) в Java?",
    "options": {
      "a": "2",
      "b": "3",
      "c": "6",
      "d": "8"
    },
    "correct_answer": "d",
    "difficulty": "средно",
    "topics": [
      "Math",
      "функции",
      "аритметика"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\ndouble x = Math.PI;\nSystem.out.println(x);",
    "options": {
      "a": "3.141592653589793",
      "b": "3.14",
      "c": "3.0",
      "d": "Error"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "Math",
      "константи",
      "аритметика"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\nint x = 10;\nint y = 5;\nint max = (x > y) ? x : y;\nSystem.out.println(max);",
    "options": {
      "a": "10",
      "b": "5",
      "c": "15",
      "d": "Error"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "условни конструкции",
      "оператори",
      "променливи"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\nint num = 20;\nwhile (num > 0) {\n System.out.print(num + \"\");\n num -= 2;\n}\nSystem.out.println();",
    "options": {
      "a": "20 18 16 14 12 10 8 6 4 2",
      "b": "2 4 6 8 10 12 14 16 18 20",
      "c": "20 18 16 14 12 10 8 6 4 2 0",
      "d": "0 2 4 6 8 10 12 14 16 18 20"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "цикли",
      "условия",
      "оператори"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\nint count = 0;\nfor (int i = 1; i <= 10; i++) {\n if (i % 2 == 0) {\n continue;\n }\n count++;\n}\nSystem.out.println(count);",
    "options": {
      "a": "5",
      "b": "10",
      "c": "6",
      "d": "Error"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "цикли",
      "условия",
      "оператори"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\nfor (int i = 1; i <= 3; i++) {\n for (int j = 1; j <= 3; j++) {\n System.out.print(i + j + \"\");\n }\n System.out.println();\n}",
    "options": {
      "a": "2 3 4\n3 4 5\n4 5 6",
      "b": "1 2 3\n2 3 4\n3 4 5",
      "c": "2 4 6\n3 6 9\n4 8 12",
      "d": "1 3 5\n2 4 6\n3 5 7"
    },
    "correct_answer": "b",
    "difficulty": "средно",
    "topics": [
      "цикли",
      "вложени цикли",
      "оператори"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код в Java?\nint number = 123;\nint sum = 0;\nwhile (number > 0) {\n int digit = number % 10;\n sum += digit;\n number /= 10;\n}\nSystem.out.println(sum);",
    "options": {
      "a": "6",
      "b": "9",
      "c": "10",
      "d": "15"
    },
    "correct_answer": "c",
    "difficulty": "средно",
    "topics": [
      "цикли",
      "оператори",
      "аритметика"
    ]
  },
  {
    "question": "Какво е коментарът в Java?",
    "options": {
      "a": "Функционалност за отстраняване на грешки в програмата",
      "b": "Средство за откриване на грешки в програмата",
      "c": "Инструкция в програмата, която не се изпълнява от компилатора",
      "d": "Място в програмата, където се извеждат резултатите"
    },
    "correct_answer": "c",
    "difficulty": "средно",
    "topics": [
      "основни концепции в програмирането"
    ]
  },
  {
    "question": "Коя от следните ключови думи се използва за връщане на стойност от метод в Java?",
    "options": {
      "a": "break",
      "b": "continue",
      "c": "return",
      "d": "throw"
    },
    "correct_answer": "c",
    "difficulty": "средно",
    "topics": [
      "основни концепции в програмирането"
    ]
  },
  {
    "question": "Какъв е основният входен поток за четене на данни в Java?",
    "options": {
      "a": "System.in",
      "b": "System.out",
      "c": "System.err",
      "d": "System.print"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "работа с вход/изход в Java"
    ]
  },
  {
    "question": "Какъв е синтаксисът за извеждане на резултат на конзолата в Java?",
    "options": {
      "a": "print()",
      "b": "display()",
      "c": "output()",
      "d": "println()"
    },
    "correct_answer": "d",
    "difficulty": "средно",
    "topics": [
      "работа с вход/изход в Java"
    ]
  },
  {
    "question": "Кое от следните се използва за форматирано извеждане на резултати в Java?",
    "options": {
      "a": "%f",
      "b": "%d",
      "c": "%s",
      "d": "всички посочени"
    },
    "correct_answer": "d",
    "difficulty": "средно",
    "topics": [
      "работа с вход/изход в Java"
    ]
  },
  {
    "question": "Какъв е символът за нов ред в Java?",
    "options": {
      "a": "%n",
      "b": "\n",
      "c": "\r",
      "d": "\t"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "работа с вход/изход в Java"
    ]
  },
  {
    "question": "Какво представлява методът Math.floor() в Java?",
    "options": {
      "a": "Връща най-голямото цяло число, по-малко или равно на дадено число",
      "b": "Връща най-малкото цяло число, по-голямо или равно на дадено число",
      "c": "Връща абсолютната стойност на дадено число",
      "d": "Връща стойността на пи (3.14159...)"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "математически операции в Java"
    ]
  },
  {
    "question": "Какъв е символът за escape sequence в Java?",
    "options": {
      "a": "\\",
      "b": "/",
      "c": "@",
      "d": "#"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "основни концепции в програмирането"
    ]
  },
  {
    "question": "Коя от следните ключови думи се използва за прекъсване на текущата итерация в цикъл в Java?",
    "options": {
      "a": "break",
      "b": "continue",
      "c": "return",
      "d": "throw"
    },
    "correct_answer": "b",
    "difficulty": "средно",
    "topics": [
      "управление на цикли в Java"
    ]
  },
  {
    "question": "Какъв е символът за конкатенация на низове в Java?",
    "options": {
      "a": "+",
      "b": "-",
      "c": "*",
      "d": "/"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "основни операции с низове в Java"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код?\nint x = 5;\nint y = 3;\nint result = x % y;\nSystem.out.println(result);",
    "options": {
      "a": "2",
      "b": "1",
      "c": "3",
      "d": "5"
    },
    "correct_answer": "b",
    "difficulty": "средно",
    "topics": [
      "математически операции в Java",
      "аритметични оператори"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код?\nint a = 10;\nint b = 5;\nint c = 2;\nint result = a / b * c;\nSystem.out.println(result);",
    "options": {
      "a": "4",
      "b": "10",
      "c": "2",
      "d": "25"
    },
    "correct_answer": "c",
    "difficulty": "средно",
    "topics": [
      "математически операции в Java",
      "аритметични оператори"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код?\ndouble x = 2.5;\ndouble y = Math.ceil(x);\nSystem.out.println(y);",
    "options": {
      "a": "2",
      "b": "3",
      "c": "2.5",
      "d": "2.0"
    },
    "correct_answer": "b",
    "difficulty": "средно",
    "topics": [
      "математически функции в Java",
      "Math.ceil()"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код?\ndouble x = -4.75;\ndouble y = Math.abs(x);\nSystem.out.println(y);",
    "options": {
      "a": "4.75",
      "b": "4",
      "c": "-4",
      "d": "-4.75"
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "математически функции в Java",
      "Math.abs()"
    ]
  },
  {
    "question": "Какъв е резултатът от изпълнението на следния код?\ndouble x = 3.7;\ndouble y = Math.pow(x, 2);\nSystem.out.println(y);",
    "options": {
      "a": "9.49",
      "b": "12.19",
      "c": "13.69",
      "d": "14.09"
    },
    "correct_answer": "c",
    "difficulty": "средно",
    "topics": [
      "математически функции в Java",
      "Math.pow()"
    ]
  },
  {
    "question": "Какво ще изведе на екрана следният код?\ndouble x = Math.PI;\nSystem.out.printf(\"%.2f\", x);",
    "options": {
      "a": "3.14",
      "b": "3.142",
      "c": "3.1416",
      "d": "3.14159"
    },
    "correct_answer": "a",
    "difficulty": "лесно",
    "topics": [
      "математически функции в Java",
      "Math.PI",
      "форматиране на изход"
    ]
  },
  {
    "question": "Какво представлява операторът return в Java?",
    "options": {
      "a": "Операторът return се използва за връщане на стойност от метод или функция.",
      "b": "Операторът return се използва за прекъсване на изпълнението на цикъл или условна конструкция.",
      "c": "Операторът return се използва за извеждане на резултат на екрана.",
      "d": "Операторът return се използва за извършване на математическа операция."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "условия и цикли в Java",
      "оператор return"
    ]
  },
  {
    "question": "Какъв е синтаксисът за дефиниране на променлива от тип Scanner в Java?",
    "options": {
      "a": "Scanner scanner = new Scanner();",
      "b": "Scanner scanner = new Scanner(System.in);",
      "c": "Scanner scanner = new Scanner(System.out);",
      "d": "Scanner scanner = Scanner(System.in);"
    },
    "correct_answer": "b",
    "difficulty": "средно",
    "topics": [
      "работа с входни данни в Java",
      "Scanner"
    ]
  },
  {
    "question": "Какъв е правилният начин за извеждане на текст на нов ред в Java?",
    "options": {
      "a": "System.out.println(text);",
      "b": "System.out.print(text);",
      "c": "System.out.printf(text);",
      "d": "System.out.print(text + \"\n\");"
    },
    "correct_answer": "a",
    "difficulty": "лесно",
    "topics": [
      "извеждане на изход в Java",
      "System.out.println()",
      "escape sequence"
    ]
  },
  {
    "question": "Кое от следните е правилното използване на оператора %n в Java?",
    "options": {
      "a": "Той се използва за изчистване на конзолата.",
      "b": "Той се използва за добавяне на нов ред в низ.",
      "c": "Той се използва за задаване на цветове в конзолата.",
      "d": "Той се използва за форматиране на числа."
    },
    "correct_answer": "b",
    "difficulty": "средно",
    "topics": [
      "извеждане на изход в Java",
      "форматиране на изход",
      "escape sequence"
    ]
  },
  {
    "question": "Как се използва операторът Math.floor() в Java?",
    "options": {
      "a": "Закръглява числото надолу до най-близкото цяло число.",
      "b": "Закръглява числото нагоре до най-близкото цяло число.",
      "c": "Извършва математическо събиране на числата.",
      "d": "Извършва математическо умножение на числата."
    },
    "correct_answer": "a",
    "difficulty": "лесно",
    "topics": [
      "математически функции в Java",
      "Math.floor()",
      "закръгляне на числа"
    ]
  },
  {
    "question": "Какво представлява операторът break в Java?",
    "options": {
      "a": "Операторът break се използва за прекъсване на изпълнението на цикъл или switch-конструкция.",
      "b": "Операторът break се използва за деклариране на прекъсване на програмата.",
      "c": "Операторът break се използва за извеждане на резултат на екрана.",
      "d": "Операторът break се използва за извършване на математическа операция."
    },
    "correct_answer": "a",
    "difficulty": "средно",
    "topics": [
      "условия и цикли в Java",
      "оператор break"
    ]
  },
  {
    "question": "Какво е коментарът в Java?",
    "options": {
      "a": "Коментарът е част от програмата, която се изпълнява от компилатора.",
      "b": "Коментарът е символен низ, който се използва за описание на програмния код.",
      "c": "Коментарът е част от програмата, която се изпълнява от операционната система.",
      "d": "Коментарът е специален символ, който означава край на програмата."
    },
    "correct_answer": "b",
    "difficulty": "лесно",
    "topics": [
      "коментари в Java",
      "кодова документация"
    ]
  }
]